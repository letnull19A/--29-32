unit Reporter;

interface

uses
  Vcl.DBGrids, ComObj, Global;

  procedure ExpotWord(grid : TDBGrid);
  procedure ExportWord(grid : TDBGrid);

implementation

uses Global;

  procedure ExpotWord(grid : TDBGrid);
  var
    doc, varcol: Variant;
    WordApp: OleVariant;
  begin

  end;

  procedure ExportWord(grid : TDBGrid);
  var
    doc, varcol: Variant;
    WordApp: OleVariant;
  begin
      try
    WordApp := CreateOleObject('Word.Application');
    doc := WordApp.documents.Open(TEMPLATE_PATH);
    WordApp.ActiveDocument.SaveAs(REPORT_PATH);

    for var i := 2 to ADODataSet1.RecordCount + 1 do
    begin
      WordApp.ActiveDocument.Tables.Item(1).Cell(i, 1).Range.Text :=
        ADODataSet1.FieldByName('Name').AsString;
      WordApp.ActiveDocument.Tables.Item(1).Cell(i, 2).Range.Text :=
        ADODataSet1.FieldByName('Phone').AsString;
      WordApp.ActiveDocument.Tables.Item(1).Cell(i, 3).Range.Text :=
        ADODataSet1.FieldByName('E-mail').AsString;
      WordApp.ActiveDocument.Tables.Item(1).Cell(i, 4).Range.Text :=
        ADODataSet1.FieldByName('Picture').AsString;

      ADODataSet1.Next();
    end;

  finally
    WordApp.Visible := true;
    WordApp.Selection.GoTo(-1, unAssigned, unAssigned, 'FIO');
    WordApp.Selection.TypeText('Wolkow Alexej');
    WordApp.Selection.GoTo(-1, unAssigned, unAssigned, 'Date');
    WordApp.Selection.TypeText(FormatDateTime('dddddd', Date));
    WordApp := unAssigned;
  end;
  end;

end.
